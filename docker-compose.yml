version: '3.8'

services:
  # Database Services
  timescaledb:
    image: timescale/timescaledb-ha:pg14-latest
    environment:
      POSTGRES_DB: groundwater
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - timescale_data:/home/postgres/pgdata/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  # Message Queue
  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf

  # Backend Services
  ingest-service:
    build: ./services/ingest
    ports:
      - "8001:8000"
    environment:
      DATABASE_URL: postgresql://postgres:password@timescaledb:5432/groundwater
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MQTT_BROKER: mosquitto:1883
    depends_on:
      - timescaledb
      - kafka
      - mosquitto

  etl-service:
    build: ./services/etl
    environment:
      DATABASE_URL: postgresql://postgres:password@timescaledb:5432/groundwater
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      REDIS_URL: redis://redis:6379
    depends_on:
      - timescaledb
      - kafka
      - redis

  ml-service:
    build: ./services/ml
    ports:
      - "8002:8000"
    environment:
      DATABASE_URL: postgresql://postgres:password@timescaledb:5432/groundwater
      REDIS_URL: redis://redis:6379
    depends_on:
      - timescaledb
      - redis

  api-service:
    build: ./services/api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:password@timescaledb:5432/groundwater
      REDIS_URL: redis://redis:6379
      ML_SERVICE_URL: http://ml-service:8000
    depends_on:
      - timescaledb
      - redis
      - ml-service

  alert-service:
    build: ./services/alerts
    environment:
      DATABASE_URL: postgresql://postgres:password@timescaledb:5432/groundwater
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
    depends_on:
      - timescaledb
      - kafka

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_WS_URL: ws://localhost:8000
    depends_on:
      - api-service

  # Monitoring
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  timescale_data:
  grafana_data: